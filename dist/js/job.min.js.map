{"version":3,"sources":["job.js"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","_regeneratorRuntime","e","t","r","Object","n","hasOwnProperty","defineProperty","value","i","a","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","toString","Array","from","test","len","arr2","isArray","jobName","document","querySelector","jobPhone","jobMail","jobCity","jobPrev","jobFuture","jobLang","jobLicense","jobMsg","sendJobFormBtn","agreeConfirm","agreeError","validationPopup","closePopupBtn","jobForm","jobFields","jobFieldMap","field","city","skills","languages","checkJobValue","fields","validationError","placeholder","clearValidatonError","validationLengthAndFormat","input","min","concat","validationEmail","mail","validationPhone","phone","validationMsg","agreeValidation","agree","hasAttribute","classList","remove","add","backendValidation","data","backendRes","backendField","_i","_Object$entries","entries","_Object$entries$_i","_jobFieldMap$key","jobFormPopup","status","msg","textContent","clearJobForm","jobAgreeStar","checkJobErrors","countError","contains","frontendValidation","preventDefault","sendJobForm","_x","_sendJobForm","_callee","jobData","_context","FormData","append","fetch","body","res","json","setAttribute","addEventListener"],"mappings":"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","file":"job.min.js","sourcesContent":["const jobName = document.querySelector('#username')\nconst jobPhone = document.querySelector('#phone')\nconst jobMail = document.querySelector('#mail')\nconst jobCity = document.querySelector('#city')\nconst jobPrev = document.querySelector('#prevJob')\nconst jobFuture = document.querySelector('#futureJob')\nconst jobLang = document.querySelector('#jobLanguage')\nconst jobLicense = document.querySelector('#joblicense')\nconst jobMsg = document.querySelector('#aboutYou')\nconst sendJobFormBtn = document.querySelector('.job__sendFormBtn')\nconst agreeConfirm = document.querySelector('[data-job-agreementbtn')\nconst agreeError = document.querySelector('.job__form-checkAgreement span')\nconst validationPopup = document.querySelector('.job__validation-popup')\nconst closePopupBtn = document.querySelector('.job__validation-popup-closeBtn')\nconst jobForm = document.querySelector('.job__form')\nconst jobFields = [jobName, jobPhone, jobMail, jobCity, jobPrev, jobFuture, jobLang, jobLicense, jobMsg, agreeError]\nconst jobFieldMap = {\n    name:{field: jobName, length: 3},\n    city: {field: jobCity, length: 3},\n    skills: {field: jobLicense, length:3 },\n    jobPrev: {field: jobPrev, length: 5},\n    jobFuture: {field: jobFuture, length: 5},\n    languages: {field: jobLang, length: 5},\n\n}\n\nconst checkJobValue = fields => {\n\tfields.forEach(field => {\n\t\tif (field.value === '') {\n\t\t\tvalidationError(field, field.placeholder)\n\t\t} else {\n\t\t\tclearValidatonError(field)\n\t\t}\n\t})\n}\nconst validationLengthAndFormat = (input, min) => {\n\tconst validSyntax = /^[a-zA-ZąęćłńóśźżĄĘĆŁŃÓŚŹŻ\\s]+$/\n\tif (input.value.length < min) {\n\t\tvalidationError(input, `Min. ilość znaków: ${min}`)\n\t} else if (!validSyntax.test(input.value)) {\n\t\tvalidationError(input, 'Nie poprawny format danych')\n\t}\n}\nconst validationEmail = (mail, min) => {\n\tconst jobMailSytnax =\n\t\t/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\tif (mail.value.length < min) {\n\t\tvalidationError(mail, `Min. ilość znaków: ${min} `)\n\t} else if (!jobMailSytnax.test(mail.value)) {\n\t\tvalidationError(mail, 'Nie poprawny adres e-mail')\n\t}\n}\nconst validationPhone = (phone, min) => {\n\tconst jobPhoneSyntax = /^\\+?[0-9 ]{9,15}$/\n\tif (phone.value.length < min) {\n\t\tvalidationError(phone, `Min. ilość znaków: ${min} `)\n\t} else if (!jobPhoneSyntax.test(phone.value)) {\n\t\tvalidationError(phone, 'Nie poprawny nr. telefonu')\n\t}\n}\nconst validationMsg = (input, min) => {\n\tconst jobMsg = /[A-Za-z0-9]+/\n\tif (input.value.length < min) {\n\t\tvalidationError(input, `Minimalna ilość znaków: ${min} `)\n\t} else if (!jobMsg.test(input.value)) {\n\t\tvalidationError(input, 'Pole nie może składać się wyłącznie ze spacji i znaków interpunkcyjnych')\n\t}\n}\nconst agreeValidation = agree => {\n\tif (!agree.hasAttribute('data-job-agree')) {\n\t\tagreeError.classList.add('error')\n\t\tagreeConfirm.value = false\n\t} else {\n\t\tagreeError.classList.remove('error')\n\t\tagreeConfirm.value = true\n\t}\n}\nconst backendValidation = data => {\n\tconst backendRes = data\n    const backendField = jobFields.slice(0, 8)\n\tfor (const [key, value] of Object.entries(backendRes))\n\t\tif (jobFieldMap[key]) {\n            const {field, length} = jobFieldMap[key]\n\t\t\tvalidationLengthAndFormat(field, length)\n\t\t} else if ('prevJob' == key || 'futureJob' == key || 'languages' == key) {\n\t\t\tvalidationLengthAndFormat(key, 5)\n\t\t} else if ('email' == key) {\n\t\t\tvalidationEmail(jobMail, 6)\n\t\t} else if ('phone' == key) {\n\t\t\tvalidationPhone(jobPhone, 9)\n\t\t} else if ('message' == key) {\n\t\t\tvalidationMsg(jobMsg, 10)\n\t\t} else if ('confirme' == key) {\n\t\t\tagreeValidation(agreeConfirm)\n\t\t}\n\tcheckJobValue(backendField)\n}\nconst jobFormPopup = status => {\n\tconst msg = validationPopup.querySelector('span')\n\tif (status === 200) {\n\t\tmsg.textContent = 'Formularz wysłany poprawnie. Jeseśmy w kontakcie.'\n\t\tvalidationPopup.classList.add('show')\n\t\tjobForm.classList.add('popup')\n\t} else {\n\t\tmsg.textContent = 'Coś poszło nie tak. Spróbuj ponownie.'\n\t\tvalidationPopup.classList.add('show')\n\t\tjobForm.classList.add('popup')\n\t}\n}\nconst clearJobForm = () => {\n\tjobFields.forEach(field => {\n\t\tfield.value = ''\n\t})\n    jobAgreeStar.classList.remove('checked')\n}\nconst checkJobErrors = () => {\n\tlet countError = 0\n\tjobFields.forEach(field => {\n\t\tif (field.classList.contains('error')) {\n\t\t\tcountError++\n\t\t}\n\t})\n\tif (countError === 0) return true\n}\nconst frontendValidation = e => {\n\te.preventDefault()\n\tvalidationLengthAndFormat(jobName, 3)\n\tvalidationLengthAndFormat(jobCity, 3)\n\tvalidationLengthAndFormat(jobPrev, 5)\n\tvalidationLengthAndFormat(jobFuture, 5)\n\tvalidationLengthAndFormat(jobLang, 5)\n\tvalidationLengthAndFormat(jobLicense, 3)\n\tvalidationEmail(jobMail, 6)\n\tvalidationPhone(jobPhone, 9)\n\tvalidationMsg(jobMsg, 10)\n\tagreeValidation(agreeConfirm)\n\tcheckJobErrors()\n}\nasync function sendJobForm(e) {\n\te.preventDefault()\n\tconst jobData = new FormData()\n\tjobData.append('name', jobName.value)\n\tjobData.append('phone', jobPhone.value)\n\tjobData.append('email', jobMail.value)\n\tjobData.append('city', jobCity.value)\n\tjobData.append('prevJob', jobPrev.value)\n\tjobData.append('futureJob', jobFuture.value)\n\tjobData.append('languages', jobLang.value)\n\tjobData.append('skills', jobLicense.value)\n\tjobData.append('msg', jobMsg.value)\n\tjobData.append('confirme', agreeConfirm.value)\n\tconst request = await fetch('/api/jobform', {\n\t\tmethod: 'POST',\n\t\tbody: jobData,\n\t})\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\tif (data.status === 400) {\n\t\t\t\tbackendValidation(data.msg)\n\t\t\t} else if (data.status === 200) {\n\t\t\t\tcheckJobValue(jobFields)\n\t\t\t\tjobFormPopup(data.status)\n\t\t\t} else {\n\t\t\t\tsendJobForm(data.status)\n\t\t\t}\n\t\t})\n}\nconst clearValidatonError = field => {\n\tfield.classList.remove('error')\n\tfield.placeholder = ''\n}\nconst validationError = (field, msg) => {\n\tfield.value = ''\n\tfield.setAttribute('class', '')\n\tfield.classList.add('error')\n\tfield.placeholder = msg\n}\nsendJobFormBtn.addEventListener('click', e => {\n\tfrontendValidation(e)\n\tif (checkJobErrors()) {\n\t\tsendJobForm(e)\n\t}\n})\njobFields.forEach(field => {\n\tfield.addEventListener('keydown', () => {\n\t\tclearValidatonError(field)\n\t})\n})\nclosePopupBtn.addEventListener('click', () => {\n\tvalidationPopup.classList.remove('show')\n\tjobForm.classList.remove('popup')\n\tclearJobForm()\n\tagreeError.classList.remove('error')\n\t\tagreeConfirm.value = true\n\n})\n"]}